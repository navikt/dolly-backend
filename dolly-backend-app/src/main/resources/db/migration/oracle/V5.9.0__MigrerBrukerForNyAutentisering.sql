-----------------------------
-- A L T E R   T A B L E S --
-----------------------------
RENAME T_BRUKER TO T_BRUKER_OLD;
RENAME T_GRUPPE TO T_GRUPPE_OLD;
RENAME T_BRUKER_FAVORITTER TO T_BRUKER_FAVORITTER_OLD;

-----------------------------
-- A L T E R   T A B L E S --
-----------------------------
CREATE TABLE T_BRUKER
(
    ID         NUMBER(9) PRIMARY KEY,
    NAV_IDENT  VARCHAR2(10),
    BRUKER_ID  VARCHAR2(50) UNIQUE,
    BRUKERNAVN VARCHAR2(100),
    EPOST      VARCHAR2(100)
);

CREATE TABLE T_GRUPPE
(
    ID                NUMBER(9) PRIMARY KEY,
    NAVN              VARCHAR2(50)  NOT NULL,
    HENSIKT           VARCHAR2(200) NOT NULL,
    OPPRETTET_AV      NUMBER(9)     NOT NULL,
    DATO_ENDRET       DATE          NOT NULL,
    SIST_ENDRET_AV    NUMBER(9)     NOT NULL,
    ER_LAAST          VARCHAR2(1),
    LAAST_BESKRIVELSE VARCHAR2(1000),
    CONSTRAINT FK_OPPRETTET_BRUKER FOREIGN KEY (OPPRETTET_AV) REFERENCES T_BRUKER (ID),
    CONSTRAINT FK_ENDRET_BRUKER FOREIGN KEY (SIST_ENDRET_AV) REFERENCES T_BRUKER (ID)
);

CREATE TABLE T_BRUKER_FAVORITTER
(
    GRUPPE_ID NUMBER(9) NOT NULL,
    BRUKER_ID NUMBER(9) NOT NULL,
    CONSTRAINT FK_FAVORITT_GRUPPE FOREIGN KEY (GRUPPE_ID) REFERENCES T_GRUPPE (ID),
    CONSTRAINT FK_FAVORITT_BRUKER FOREIGN KEY (BRUKER_ID) REFERENCES T_BRUKER (ID)
);

ALTER TABLE T_BESTILLING
    ADD BRUKER_ID NUMBER(9)
        CONSTRAINT FK_BESTILLING_BRUKER_ID REFERENCES T_BRUKER (ID);

-----------------------
-- S E Q U E N C E S -
-----------------------
CREATE SEQUENCE T_BRUKER_SEQ START WITH 1;

-----------------------------
-- M I G R A T E   D A T A --
-----------------------------
INSERT INTO T_BRUKER (ID, NAV_IDENT)
SELECT T_BRUKER_SEQ.nextval, NAV_IDENT
FROM T_BRUKER_OLD;

INSERT INTO T_GRUPPE
SELECT go.ID,
       go.NAVN,
       go.HENSIKT,
       b1.ID,
       go.DATO_ENDRET,
       b2.ID,
       go.ER_LAAST,
       go.LAAST_BESKRIVELSE
FROM T_GRUPPE_OLD go,
     T_BRUKER b1,
     T_BRUKER b2
WHERE go.OPPRETTET_AV = b1.NAV_IDENT
  AND go.SIST_ENDRET_AV = b2.NAV_IDENT;

INSERT INTO T_BRUKER_FAVORITTER
SELECT fav.GRUPPE_ID, bruk.ID
FROM T_BRUKER_FAVORITTER_OLD fav,
     T_BRUKER bruk
WHERE fav.BRUKER_ID = bruk.NAV_IDENT;

UPDATE T_BESTILLING best
SET BRUKER_ID = (SELECT ID
                 FROM T_BRUKER bruker
                 WHERE best.USER_ID IS NOT NULL
                   AND best.USER_ID = bruker.NAV_IDENT)
WHERE best.USER_ID IS NOT NULL;

COMMIT;